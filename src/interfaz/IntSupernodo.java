/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package interfaz;

import headers.objArchivo;
import java.awt.List;
import java.util.ArrayList;
import javax.swing.DefaultListModel;
import javax.swing.RowSorter;
import javax.swing.SortOrder;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author Sweet
 */
public class IntSupernodo extends javax.swing.JFrame {

    /**
     * Creates new form IntSupernodo
     */
    public IntSupernodo() {
        ar = new ArrayList<>();
        String os[] = {"Archivo","MD5","Supernodo","Nodo"};
        initComponents();
        spn1 = new DefaultListModel();
        nodos = new DefaultListModel();
        tab = new DefaultTableModel(os, 0);
        jList1.setModel(spn1);
        jList2.setModel(nodos);
        jTable1.setModel(tab);
        close = false;
        sorter = new TableRowSorter<>(jTable1.getModel());
        jTable1.setRowSorter(sorter);
        sortKeys = new ArrayList<>();
        int columnIndexToSort = 3;
        sortKeys.add(new RowSorter.SortKey(columnIndexToSort, SortOrder.ASCENDING));
        sorter.setSortKeys(sortKeys);
        sorter.sort();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jList2 = new javax.swing.JList<>();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jLabel1.setText("Lista de Supernodos");

        jList1.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(jList1);

        jLabel2.setText("Lista de Nodos Hijo");

        jList2.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane2.setViewportView(jList2);

        jLabel3.setText("Lista de archivos");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(jTable1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE)
                    .addComponent(jScrollPane2))
                .addGap(45, 45, 45)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 525, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(33, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(24, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
        close = true;
    }//GEN-LAST:event_formWindowClosing

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(IntSupernodo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(IntSupernodo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(IntSupernodo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(IntSupernodo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new IntSupernodo().setVisible(true);
            }
        });
    }
    
    public void addSupernodos(String sp){
        spn1.addElement(sp);
    }
    
    public void addNodos(String n){
        nodos.addElement(n);
    }
    
    public boolean removeSuperNodo(String s){
        String help;
        for(int i=0;i<spn1.getSize();i++){
            help=(String)spn1.get(i);
            if(help.equals(s)){
                spn1.remove(i);
                return true;
            }
        }
        return false;
    }
    
    public boolean removeNodo(String n){ 
        String help;
        for(int i=0;i<nodos.getSize();i++){
            help=(String)nodos.get(i);
            if(help.equals(n)){
                nodos.remove(i);
                return true;
            }
        }
        return false;
    }
    
    public void addTable(String a,String md5, String sn,String n){
        Object[] objs = {a,md5,sn,n};
        tab.addRow(objs);
    }
    
    public boolean existTable(String a,String md5, String sn,String n){
        String col1,col2,col3,col4;
        for(int i=0;i<tab.getRowCount();i++){
            col1=(String) tab.getValueAt(i, 0);
            col2=(String) tab.getValueAt(i, 1);
            col3=(String) tab.getValueAt(i, 2);
            col4=(String) tab.getValueAt(i, 3);
            if(col1.equals(a))
                if(col2.equals(md5))
                    if(col3.equals(sn))
                        if(col4.equals(n))
                            return true;        
        }
        return false;
    }
    
    public boolean removeTable(String a,String md5, String sn,String n){
            if(existTable(a,md5,sn,n)){
                tab.removeRow(getindexTable(a,md5,sn,n));
                return true;
            }                  
        return false;
    }
    
    public int getindexTable(String a, String md5, String sn, String n) {
        String col1,col2,col3,col4;
        for(int i=0;i<tab.getRowCount();i++){
            col1=(String) tab.getValueAt(i, 0);
            col2=(String) tab.getValueAt(i, 1);
            col3=(String) tab.getValueAt(i, 2);
            col4=(String) tab.getValueAt(i, 3);
            if(col1.equals(a))
                if(col2.equals(md5))
                    if(col3.equals(sn))
                        if(col4.equals(n))
                            return i;        
        }
        return -1;
    }
    
    public ArrayList<objArchivo> getTable(String compare){
        ar.clear();
        String col1,col2,col3,col4;
        for(int i=0;i<tab.getRowCount();i++){
            col1=(String) tab.getValueAt(i, 0);
            col2=(String) tab.getValueAt(i, 1);
            col3=(String) tab.getValueAt(i, 2);
            col4=(String) tab.getValueAt(i, 3);
            if(compare.equals("")){
                objArchivo aux = new objArchivo(col1, col2, col3, col4);
                ar.add(aux);
            }else if(compare.equals(col1)){
                objArchivo aux = new objArchivo(col1, col2, col3, col4);
                ar.add(aux);
            }       
        }
        return ar;
    }
    
    public void removeMasivoSN(String sn) {
        String col3;
        int a = tab.getRowCount();
        System.err.println("a:" + a);
        if(a>0){
            for(int i=a;i>0;--i){
                col3=(String) tab.getValueAt(i, 2);
                if(col3.equalsIgnoreCase(sn)){
                    tab.removeRow(i);
                }
            }
        }
    }
    public void removeMasivoN(String n) {
        String col4;
        int a=tab.getRowCount();
        System.err.println("a:" + a);
        if(a>0){
            for(int i=a;i>0;--i){
            col4=(String) tab.getValueAt(i, 3);
            if(col4.equalsIgnoreCase(n)){
                tab.removeRow(i);
            }
        }
        }
    }
    
    public boolean getClose() {
        return close;
    }
    
    public int getPuerto(){
        String[] a = this.getTitle().split(":");
        return Integer.parseInt(a[1]);
    }

    TableRowSorter<TableModel> sorter;
    ArrayList<RowSorter.SortKey> sortKeys;
    private ArrayList<objArchivo> ar;
    private boolean close;
    private DefaultTableModel tab;
    private DefaultListModel spn1;
    private DefaultListModel nodos;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JList<String> jList1;
    private javax.swing.JList<String> jList2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables

    

    
}
